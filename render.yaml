services:
  # 1. Web Service (Flask/Gunicorn)
  - type: web
    name: study-support-app
    runtime: python
    buildCommand: "pip install -r requirements.txt"
    # ▼ テスト用のコマンドに変更
    startCommand: "echo '[Web Service] Hello from render.yaml!' && sleep 300"
    envVars:
      - key: PYTHON_VERSION
        value: 3.11.0
      - key: OPENAI_API_KEY
        sync: false
      - key: REDIS_URL
        fromService:
          type: redis
          name: redis-broker
          property: connectionString
    healthCheckPath: /health
    disks:
      - name: data
        mountPath: /var/data
        sizeGB: 1

  # 2. Background Worker (Celery)
  - type: worker
    name: celery-worker
    runtime: python
    buildCommand: "pip install -r requirements.txt"
    # ▼ テスト用のコマンドに変更
    startCommand: "echo '[Celery Worker] Hello from render.yaml!' && ls -la && sleep 300"
    envVars:
      - key: PYTHON_VERSION
        value: 3.11.0
      - key: OPENAI_API_KEY
        fromService:
          type: web
          name: study-support-app
          envVarKey: OPENAI_API_KEY
      - key: REDIS_URL
        fromService:
          type: redis
          name: redis-broker
          property: connectionString
    disks:
      - name: data
        mountPath: /var/data
        fromService:
          type: web
          name: study-support-app
          diskName: data

  # 3. Redis Instance (Celery Broker)
  - type: redis
    name: redis-broker
    ipAllowList: []
    maxmemoryPolicy: allkeys-lru